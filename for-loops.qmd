---
title: "EDS 221 Day 3 Practice"
format: html
editor_options: 
  chunk_output_type: console
---

```{r}
pinyon_pine <- 14
lodgepole_pine <- 46

# some logical expressions
pinyon_pine==10
pinyon_pine<lodgepole_pine

pinyon_pine!=25

```

# Conditionals

```{r}
burrito <- 2.4

#write a short 'if' statement
if(burrito>2){
  print("I love burrtios")
}
```

```{r}
pika <- 60

if(pika>60){
  print("MEGA PIKAAA")
}else{
  print("normal pika")}

```


```{r}
library(stringr)

my_ships <- c("Millenium Falcon",
              "X-Wing",
              "Tie-Fighter",
              "Death Star")

str_detect(my_ships, pattern = "r")
```

```{r}
phrase <- "I love burritos"

if (str_detect(phrase, "love")){
  print("burrito fan!")
}
```

## Switch Statements

```{r}
# like if else but more efficient

species <- "mouse"

switch(species,
       "cat" = print("meow"),
       "dog" = print("woof"),
       "mouse" = print("squeak"))

```

# For loops

```{r}
dog_names <- c("Teddy", "Khora", "Banjo", "Waffle")

for (pupster in dog_names){
  print(paste("My dog's name is", pupster))
}

paste("My dog's name is", dog_names)
```


```{r}
mass <- seq(from=0, to =3, by=0.5)

for (i in mass){
  new_value <-i+2
  print(new_value)
}
```

```{r}
mass <- seq(from=0, to=3, by=0.5)
for(i in seq_along(mass)){#seq_along is like range
  new_value <- mass[i] + 2
  print(new_value)
}
```

```{r}
tree_height <- c(1,2,6,10)

for (i in seq_along(tree_height)){
  new_value <- tree_height[i] + tree_height[i+1]
  print(new_value)
}
```

```{r}

animal <- c("cat", "dog", "dog", "zebra","dog")

for (i in animal){
  if (i=="dog"){
    print("I love dogs!")
  }else{print ("This is not a dog")}
}
```


```{r}
species <- c("dog", "elephant", "goat", "dog", "dog", "elephant")

age_human <- c(3,8,4,6,12,18)

for(i in seq_along(species)){
  if(species[i]=="dog"){
    animal_age <- age_human[i]*7
  }else if (species[i] == "elephant"){
    animal_age <- age_human[i] * 0.88
  }else if (species[i] == "goat"){
    animal_age <- age_human[i] * 4.7
  }
  print(animal_age)
}
```

# Storing for loop output

```{r}
# create an empty vector for animal ages
rm(list=ls())

species <- c("dog", "elephant", "goat", "dog", "dog", "elephant")
animal_ages <- vector(mode="numeric", length = length(species))
age_human <- c(3,8,4,6,12,18)

for(i in seq_along(species)){
  if(species[i]=="dog"){
    animal_age <- age_human[i]*7
  }else if (species[i] == "elephant"){
    animal_age <- age_human[i] * 0.88
  }else if (species[i] == "goat"){
    animal_age <- age_human[i] * 4.7
  }
  animal_ages[i] <- animal_age
}
```

```{r}
tigers <- c(29, 34, 82)
lions <- c(2,18,6)
big_cats <- vector(mode = "numeric", length = length(tigers))

for(i in seq_along(tigers)){
  total_cats <- tigers[i] + lions[i]
  big_cats[i] <- total_cats
}
```

```{r}
mean_mtcars <- vector(mode = "numeric", length = ncol(mtcars))

for (i in 1:ncol(mtcars)){
  mean_value <- mean(mtcars[[i]], na.rm=TRUE)
  mean_mtcars[[i]] <- mean_value
}
```

```{r}
#library(palmerpenguins)
#penguins

for ( i in seq_along(penguins)){
  if(is.numeric(penguins[[i]])){
    penguin_median <- median(penguins[[i]], na.rm = TRUE)
    print(penguin_median)
  }else{
    print("non-numeric column")
  }
}
```


```{r}
apply(mtcars, MARGIN = 2, FUN= mean) # apply FUN(function == mean) across all in data
library(dplyr)
penguins %>% 
  group_by(species) %>% 
  summarize(across(where(is.numeric), mean, na.rm=TRUE))
```

```{r}
library(purrr)

map(.x=mtcars, .f=mean )
map_df(.x=mtcars, .f=mean)
```



